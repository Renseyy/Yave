YAVE_LIB_DIR = src/YAVE
IMGUI_SRC_DIR = src/imgui
IMGUI_LIB_DIR = lib/imgui
ASSIMP_FLAGS = -I include/assimp -L lib64 -lassimp 

OF = Yave #output file 
OF_W = Yave.exe

# nie tykaj póki nie jesteś pewien co robisz XD
# jest to pewien majstersztyk nad którym troszku się napracowałem
# więc póki działa to nie tykać
CC = g++
CC_W = x86_64-w64-mingw32-g++
COMPILE_FLAGS = -std=c++20 -lglad -lglfw -lGL -lm -lX11 -lpthread -lXrandr -lXi -ldl $(ASSIMP_FLAGS)
BUILD_OBJ = main.cpp \
	$(OBJ) \
	$(YAVE_LIB_DIR)/*.cpp \
	-I $(IMGUI_LIB_DIR)


COMPILE_IMGUI = g++ -std=c++20 -lglad -lglfw -lGL -lm -lX11 -lpthread -lXrandr -lXi -ldl -lstdc++fs



OBJ := $(patsubst %.cpp,%.o,$(wildcard $(IMGUI_SRC_DIR)/imgui*.cpp))

#rules
default: run # do not change place of this rule

#imgui all files
%.o : %.cpp
	$(COMPILE_IMGUI) -c $< -o $@ -I $(IMGUI_LIB_DIR)
$(OF): $(OBJ)
	$(COMPILE_IMGUI) -o $@ $^


#wszystko(dla linuxa)
all: _build_imgui build _build_imgui _chmod _run#XD

#kompiluj - bez imgui
build: 
	$(CC) -o $(OF) $(BUILD_OBJ) $(COMPILE_FLAGS)

build_w:
	$(CC_W) -o $(OF_W) $(BUILD_OBJ) $(COMPILE_FLAGS)

run: build _chmod _run

_build_imgui: $(OBJ) 

_chmod:
	@chmod +x $(OF)
_run:
	./$(OF)

_clean_imgui:
	rm $(OBJ)